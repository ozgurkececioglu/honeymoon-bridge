/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLobbyRouteImport } from './routes/_auth.lobby'
import { Route as AuthGameIndexRouteImport } from './routes/_auth.game/index'
import { Route as AuthGameGameIdRouteImport } from './routes/_auth.game/$gameId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLobbyRoute = AuthLobbyRouteImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGameIndexRoute = AuthGameIndexRouteImport.update({
  id: '/game/',
  path: '/game/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGameGameIdRoute = AuthGameGameIdRouteImport.update({
  id: '/game/$gameId',
  path: '/game/$gameId',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/lobby': typeof AuthLobbyRoute
  '/game/$gameId': typeof AuthGameGameIdRoute
  '/game': typeof AuthGameIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/lobby': typeof AuthLobbyRoute
  '/game/$gameId': typeof AuthGameGameIdRoute
  '/game': typeof AuthGameIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/lobby': typeof AuthLobbyRoute
  '/_auth/game/$gameId': typeof AuthGameGameIdRoute
  '/_auth/game/': typeof AuthGameIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/lobby' | '/game/$gameId' | '/game'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/lobby' | '/game/$gameId' | '/game'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/lobby'
    | '/_auth/game/$gameId'
    | '/_auth/game/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/lobby': {
      id: '/_auth/lobby'
      path: '/lobby'
      fullPath: '/lobby'
      preLoaderRoute: typeof AuthLobbyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/game/': {
      id: '/_auth/game/'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof AuthGameIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/game/$gameId': {
      id: '/_auth/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/game/$gameId'
      preLoaderRoute: typeof AuthGameGameIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLobbyRoute: typeof AuthLobbyRoute
  AuthGameGameIdRoute: typeof AuthGameGameIdRoute
  AuthGameIndexRoute: typeof AuthGameIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLobbyRoute: AuthLobbyRoute,
  AuthGameGameIdRoute: AuthGameGameIdRoute,
  AuthGameIndexRoute: AuthGameIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
